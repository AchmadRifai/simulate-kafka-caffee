services:
  kitchen:
    build:
      context: kitchen-service
      dockerfile: Dockerfile
    depends_on:
      - kafka
      - redis
      - elasticsearch
      - postgresql
    network_mode: bridge
    env_file:
      - ./.env
    restart: always
    extra_hosts:
      - "host.docker.internal:host-gateway"
  helper:
    build:
      context: helper-service
      dockerfile: Dockerfile
    depends_on:
      - kitchen
    network_mode: bridge
    env_file:
      - ./.env
    restart: always
    extra_hosts:
      - "host.docker.internal:host-gateway"
  waitres:
    build:
      context: waitres-service
      dockerfile: Dockerfile
    depends_on:
      - kitchen
    network_mode: bridge
    env_file:
      - ./.env
    restart: always
    extra_hosts:
      - "host.docker.internal:host-gateway"
  cashier:
    build:
      context: cashier-service
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    depends_on:
      - kitchen
    network_mode: bridge
    env_file:
      - ./.env
    restart: always
    extra_hosts:
      - "host.docker.internal:host-gateway"
  supplier:
    build:
      context: supplier-service
      dockerfile: Dockerfile
    ports:
      - 18080:8080
    depends_on:
      - kitchen
    network_mode: bridge
    env_file:
      - ./.env
    restart: always
    extra_hosts:
      - "host.docker.internal:host-gateway"
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - 6379:6379
    volumes:
      - ~/apps/redis:/root/redis
    env_file:
      - ./.env
    network_mode: bridge
    restart: always
    extra_hosts:
      - "host.docker.internal:host-gateway"
  postgresql:
    image: postgres:14-alpine
    container_name: postgresql
    network_mode: bridge
    restart: always
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - 15432:5432
    volumes:
      - ./apps/postgres:/var/lib/postgresql/data
    env_file:
      - ./.env
  zookeeper:
    image: confluentinc/cp-zookeeper
    container_name: zookeeper
    restart: always
    network_mode: bridge
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
  kafka:
    image: confluentinc/cp-kafka
    container_name: kafka
    restart: always
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    network_mode: bridge
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  elasticsearch:
    image: elasticsearch:7.17.18
    container_name: elasticsearch
    restart: always
    network_mode: bridge
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
